{
  "openapi": "3.0.1",
  "info": {
    "title": "test API",
    "version": "v1"
  },
  "tags": [
    {
      "name": "Users API:",
      "description": "main path - https://yummy-rest-api.yurgo.fun/"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "User API"
        ],
        "description": "description",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "name": "newUser",
                "email": "example@example.com",
                "password": "hsy36djhwe93"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "hs672ijnfy23hf3pi3uwkdj"
                        },
                        "name": {
                          "type": "string",
                          "example": "newUser"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login existed user",
        "tags": [
          "User API"
        ],
        "description": "description",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "email": "Jimmy2updated@email.com",
                "password": "1234567"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        },
                        "token": {
                          "type": "string",
                          "example": "eyJhbGeiO6JIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2JiM2ZjZDgxNWZhNzcyYjU2N2M0ZSIsImlhdCI6MTY4MTY2ODYzNywiZXhwIjoxNjgxRjc1ODM3fQ.U2MKPZbgFvq_ASqX79dZBxOA7AbUncCQeH9M8ffohps"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "summary": "Update existed user",
        "tags": [
          "User API"
        ],
        "description": "Update name OR email fields os user record",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "fields update"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "UserName"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/{id}": {
      "put": {
        "summary": "Update existed user",
        "tags": [
          "User API"
        ],
        "description": "Update name OR email fields os user record",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "user id",
            "schema": {
              "type": "string",
              "example": "6435681c54d50f705952fa96"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "name": "newName",
                "email": "Jimmy2updated@email.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "fields update"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "UserName"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "summary": "Update existed user",
        "tags": [
          "User API"
        ],
        "description": "Logout loginned in user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/subscribe": {
      "post": {
        "summary": "Subscribe to news feed",
        "tags": [
          "Subscribe"
        ],
        "description": "description",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscribe"
              },
              "example": {
                "emailToSubscribe": "example@email.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subscribed": {
                      "type": "string",
                      "example": "email@email.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/recipes/category-list": {
      "get": {
        "summary": "Get a list of recipes categories",
        "tags": [
          "Receipes"
        ],
        "description": "received an array of strings",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Array of Strings - reccipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categoryList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "categ1",
                        "categ2",
                        "categ3"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "required": [
              "true",
              "user id is required"
            ]
          },
          "name": {
            "type": "string",
            "required": [
              "true",
              "Set name of user"
            ]
          },
          "email": {
            "type": "string",
            "required": [
              "true",
              "Set email of user"
            ]
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Subscribe": {
        "type": "object",
        "properties": {
          "emailToSubscribe": {
            "type": "string",
            "required": [
              "true"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}