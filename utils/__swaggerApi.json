{
  "openapi": "3.0.1",
  "info": {
    "title": "test API",
    "version": "v1"
  },
  "tags": [
    {
      "name": "Users API:",
      "description": "main path - https://yummy-rest-api.yurgo.fun/"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "User API"
        ],
        "description": "description",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "name": "newUser",
                "email": "example@example.com",
                "password": "hsy36djhwe93"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "hs672ijnfy23hf3pi3uwkdj"
                        },
                        "name": {
                          "type": "string",
                          "example": "newUser"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login existed user",
        "tags": [
          "User API"
        ],
        "description": "description",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "email": "Jimmy2updated@email.com",
                "password": "1234567"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        },
                        "token": {
                          "type": "string",
                          "example": "eyJhbGeiO6JIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2JiM2ZjZDgxNWZhNzcyYjU2N2M0ZSIsImlhdCI6MTY4MTY2ODYzNywiZXhwIjoxNjgxRjc1ODM3fQ.U2MKPZbgFvq_ASqX79dZBxOA7AbUncCQeH9M8ffohps"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "summary": "Update existed user",
        "tags": [
          "User API"
        ],
        "description": "Update name OR email fields os user record",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "fields update"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "UserName"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/{id}": {
      "put": {
        "summary": "Update existed user",
        "tags": [
          "User API"
        ],
        "description": "Update name OR email fields os user record",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "user id",
            "schema": {
              "type": "string",
              "example": "6435681c54d50f705952fa96"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "name": "newName",
                "email": "Jimmy2updated@email.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "fields update"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "UserName"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "summary": "Update existed user",
        "tags": [
          "User API"
        ],
        "description": "Logout loginned in user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/subscribe": {
      "post": {
        "summary": "Subscribe to news feed",
        "tags": [
          "Subscribe"
        ],
        "description": "description",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscribe"
              },
              "example": {
                "emailToSubscribe": "example@email.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subscribed": {
                      "type": "string",
                      "example": "email@email.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/recipes/category-list": {
      "get": {
        "summary": "Get a list of recipes categories",
        "tags": [
          "Receipes"
        ],
        "description": "received an array of strings",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Array of Strings - reccipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categoryList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "categ1",
                        "categ2",
                        "categ3"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/recipes/main-page": {
      "get": {
        "summary": "Get a list of recipes",
        "tags": [
          "Receipes"
        ],
        "description": "received an 4 receipes data for 4 categories",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Strings - reccipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "flattenedResult": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/search": {
      "get": {
        "summary": "Search recipes",
        "tags": [
          "Receipes"
        ],
        "description": "search recipes by key word",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
              "example": "pot"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Array of recipes when search result is no empty",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "searchResult": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "when search has no result"
          }
        }
      }
    },
    "/api/ingredients/": {
      "get": {
        "summary": "Search recipes",
        "tags": [
          "Receipes"
        ],
        "description": "search recipes by key word",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
              "example": "Basil Leaves"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Array of recipes when search result is no empty",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "searchResult": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "when search has no result"
          }
        }
      }
    },
    "/api/ingredients/list": {
      "get": {
        "summary": "Get a list of ingredients",
        "tags": [
          "Receipes"
        ],
        "description": "received a list of all ingredients",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of recipes when search result is no empty",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "searchResult": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/favorite": {
      "get": {
        "summary": "Get a list of favorite recipes",
        "tags": [
          "Favorite"
        ],
        "description": "received list is an array",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of recipes when search result is no empty",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "favoriteRecipes": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add recipe to favorites",
        "tags": [
          "Favorite"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "recipeId": "640cd5ac2d9fecf12e8897ef"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Array of recipes when search result is no empty",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "favorites": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "640cd5ag2d9fecf12e8897ef",
                        "640cd5dc2d9fecf12e889817",
                        "640cd5ac2d9fenf12e889823"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/favorite/{id}": {
      "delete": {
        "summary": "Delete recipe from favorites",
        "tags": [
          "Favorite"
        ],
        "description": "received list is an array",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "user id",
            "schema": {
              "type": "string",
              "example": "640cd5ac2d9fecf12e8897ef"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "when search has no result"
          }
        }
      }
    },
    "/api/shopping-list": {
      "get": {
        "summary": "Get a list of ingredients added to shopping list",
        "tags": [
          "Shopping list"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of ingredients data objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shoppingList": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add an ingredient and its quantity to shpooing list",
        "tags": [
          "Shopping list"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "id": "005c2dd963a319ea671e368c",
                "iid": "640c2dd963a319ea671e368c",
                "ttl": "Challots",
                "thb": "https://res.cloudinary.com/ddbvbv5sp/image/upload/v1678564674/ovlvnvcuzttiplnzewm3.png",
                "number": "400 g"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Array of recipes when search result is no empty",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shoppingList": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/shopping-list/{id}": {
      "delete": {
        "summary": "Delete ingredient from shopping list",
        "tags": [
          "Shopping list"
        ],
        "description": "received list is an array",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id record to delete",
            "schema": {
              "type": "string",
              "example": "640cd5ac2d9fecf12e8897ef"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "when delete was successful"
          },
          "404": {
            "description": "when search has no result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "nothing to delete"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "required": [
              "true",
              "user id is required"
            ]
          },
          "name": {
            "type": "string",
            "required": [
              "true",
              "Set name of user"
            ]
          },
          "email": {
            "type": "string",
            "required": [
              "true",
              "Set email of user"
            ]
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Subscribe": {
        "type": "object",
        "properties": {
          "emailToSubscribe": {
            "type": "string",
            "required": [
              "true"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}